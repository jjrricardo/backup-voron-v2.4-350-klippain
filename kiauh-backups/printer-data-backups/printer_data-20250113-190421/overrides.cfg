############################################# \
######## USER CONFIG OVERRIDES FILE #########  + --> This will help you personalize my config to your printer :)
############################################# /

# This file is yours! Feel free to edit it in order to include all the needed
# things to adapt my generic config to your machine. This file will not be erased
# when updating the config using moonraker and it will be kept as you've set it.
# You can change every section of the config. You can also add some new custom macros, etc...
# The corresponding documentation can be found in: docs > overrides.md

### Also, keep in mind: if you use a multi-MCU config such as the old school double SKRs or a CANbus toolhead
### board, you will need to specify which components are connected to which board in your own mcu.cfg file!
### Example: if something is connected to the toolhead MCU, you should use "config_pin: toolhead:PIN_NAME".

#> Main control MCUs are called "mcu" (and "secondary" when using a double MCU configuration)
#> Toolhead CANboard MCUs are called "toolhead"
#> MMU/ERCF MCUs are called "mmu" 

#[gcode_macro _USER_VARIABLES]
#variable_filament_sensor_enabled: True
#gcode:
#[filament_switch_sensor runout_sensor]
#switch_pin: !toolhead:PB3

#pause_on_runout: True
##runout_gcode:
##insert_gcode:
##event_delay:
##pause_delay:

                            
# ------------------------------------------------------------------------------------------
[temperature_sensor Chamber]
sensor_type: ATC Semitec 104NT-4-R025H42G #ATC Semitec 104GT-2
sensor_pin: CHAMBER_TEMPERATURE


[beacon]
x_offset: 0 # update with offset from nozzle on your machine
y_offset: 20 #0 # update with offset from nozzle on your machine
mesh_main_direction: x
mesh_runs: 2



[input_shaper]
# Supported shapers: zv, mzv, zvd, ei, 2hump_ei, 3hump_ei
shaper_freq_x: 55.6
shaper_type_x: mzv
shaper_freq_y: 42.8
shaper_type_y: mzv

#-------------------------#
#   START_PRINT SEQUENCE  #
#-------------------------#

## The START_PRINT sequence is modular and fully customizable. A default START_PRINT sequence is auto-populated based on
## your probe choice (TAP, Dockable, Inductive), but if for some reasons you still want to modify it, please uncomment the following 3
## lines to define a new `variable_startprint_actions`. You can use any number of action or even duplicate some actions if needed.
## Available actions: "bed_soak", "extruder_preheating", "chamber_soak", "extruder_heating", "tilt_calib", "z_offset", "bedmesh", "purge", "clean", "primeline"
##
[gcode_macro _USER_VARIABLES]
variable_startprint_actions: "bed_soak", "extruder_preheating", "chamber_soak", "tilt_calib", "custom1", "extruder_heating", "z_offset", "bedmesh", "primeline"

# variable_startprint_actions: "action1", "action2", ...
# gcode: # do not remove this line


#-------------------------#
#   EXTRUDER/BED PIDs     #
#-------------------------#

## Here is an example of some overrides for the PIDs. I put them here as almost everyone will use them,
## so just uncomment the following lines and change the values according to your own machine
[extruder]

rotation_distance: 34.88965326244211 #35.242074002466,78 #34.55105294359488 #35.256176473056 #34.74884336 #34.2826 #4.637
gear_ratio: 7.5:1
microsteps: 16
full_steps_per_rotation: 200
nozzle_diameter: 0.400
filament_diameter: 1.750
max_extrude_only_distance: 220 #101 #200 #110
max_extrude_cross_section: 5
sensor_type: PT1000
min_temp: -10
max_temp: 300
min_extrude_temp: 175

step_pin: toolhead:E_STEP
dir_pin: toolhead:E_DIR
enable_pin: !toolhead:E_ENABLE
heater_pin: toolhead:E_HEATER
sensor_pin: toolhead:E_TEMPERATURE

#[autotune_tmc extruder]
#motor: ldo-36sth20-1004ahg
#tuning_goal: auto #silent

[tmc2209 extruder]
uart_pin: toolhead:E_TMCUART
run_current: 0.85
interpolate: true
#hold_current: 0.100
sense_resistor: 0.110
stealthchop_threshold: 0
driver_TBL: 0
driver_HEND: 6
driver_HSTRT: 7
driver_TOFF: 4
#-------------------------#
#   Z MOTORS DIRECTION    #
#-------------------------#

## Here is an example of some overrides for the motor directions as it's a pretty common one. If you need
## to invert the Z1 or Z3 motor direction on your machine, just uncomment the following lines.
[stepper_z1]
 dir_pin: !Z1_DIR

[stepper_z3]
 dir_pin: !Z3_DIR
 
[stepper_z]
endstop_pin: probe:z_virtual_endstop # use beacon as virtual endstop
homing_retract_dist: 0 # beacon needs this to be set to 0
step_pin: Z_STEP
dir_pin: !Z_DIR
enable_pin: !Z_ENABLE
microsteps: 64
homing_speed: 5
second_homing_speed: 5
#*homing_retract_dist: 2.5

#[autotune_tmc stepper_z]
#motor: ldo-42sth48-2004ac
#tuning_goal: silent

#[safe_z_home]
#home_xy_position: 175, 175
#   Sets the x, y position used for z homing with beacon
#z_hop: 5
#   Retracts the z axis bef


[tmc2209 stepper_z]
uart_pin: Z_TMCUART
interpolate: FALSE
run_current: 0.82
sense_resistor: 0.110
stealthchop_threshold: 0


[stepper_z1]
step_pin: Z1_STEP
dir_pin: Z1_DIR
enable_pin: !Z1_ENABLE
microsteps: 64

#[autotune_tmc stepper_z1]
#motor: ldo-42sth48-2004ac
#tuning_goal: silent

[tmc2209 stepper_z1]
uart_pin: Z1_TMCUART
interpolate: False
run_current: 0.82
sense_resistor: 0.110
stealthchop_threshold: 0

[stepper_z2]
step_pin: Z2_STEP
dir_pin: !Z2_DIR
enable_pin: !Z2_ENABLE
microsteps: 64

#[autotune_tmc stepper_z2]
#motor: ldo-42sth48-2004ac
#tuning_goal: silent

[tmc2209 stepper_z2]
uart_pin: Z2_TMCUART
interpolate: FALSE
run_current: 0.82
sense_resistor: 0.110
stealthchop_threshold: 0

[stepper_z3]
step_pin: Z3_STEP
dir_pin: Z3_DIR
enable_pin: !Z3_ENABLE
microsteps: 64 #256 #64

#[autotune_tmc stepper_z3]
#motor: ldo-42sth48-2004ac
#tuning_goal: silent

[tmc2209 stepper_z3]
uart_pin: Z3_TMCUART
interpolate: FALSE
run_current: 0.82
sense_resistor: 0.110
stealthchop_threshold: 0

#[autotune_tmc stepper_x]
#motor: ldo-42sth40-2004mah
#tuning_goal: silent #auto

[tmc2209 stepper_x]
uart_pin: X_TMCUART
interpolate: FALSE
run_current: 0.82
sense_resistor: 0.110
stealthchop_threshold: 0

[stepper_x]
endstop_pin: ^toolhead:PB8
# endstop_pin: ^toolhead:X_STOP
dir_pin: !X_DIR
microsteps: 64 #128 
position_min: 20
position_max: 349
position_endstop: 349

#[autotune_tmc stepper_y]
#motor: ldo-42sth40-2004mah
#tuning_goal: silent #auto

[tmc2209 stepper_y]
uart_pin: Y_TMCUART
interpolate: FALSE
run_current: 0.82
sense_resistor: 0.110
stealthchop_threshold: 0

[stepper_y]
dir_pin: !Y_DIR
endstop_pin: ^MCU_Y_MAX
microsteps: 64 #128 

#-------------------------#
#   Probe Offsets         #
#-------------------------#

## Here is an example of some overrides for bed probes. These frequently have calibrated offsets for xyz,
## and many will need them during setup. If you need to set these, just uncomment the following lines.
#[probe]
# x_offset: 0 #-1.85
# y_offset: 29.3
# z_offset: 12.6

[quad_gantry_level]
horizontal_move_z: 6


[neopixel caselight]
pin: MCU_5V_RGB_DATA # LIGHT_NEOPIXEL
#   The pin connected to the neopixel. This parameter must be
#   provided.
chain_count: 46 #31
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
color_order: GRB
#   Set the pixel order required by the LED hardware (using a string
#   containing the letters R, G, B, W with W optional). The default is
#   GRB.
#initial_RED: 0.0
#initial_GREEN: 0.0
#initial_BLUE: 0.0
#initial_WHITE: 0.0
#   See the "led" section for information on these parameters.

[shaketune]
result_folder: ~/printer_data/config/ShakeTune_results
#    The folder where the results will be stored. It will be created if it doesn't exist.
number_of_results_to_keep: 3
#    The number of results to keep in the result_folder. The oldest results will
#    be automatically deleted after each runs.
#keep_raw_csv: False
#    If True, the raw CSV files will be kept in the result_folder alongside the
#    PNG graphs. If False, they will be deleted and only the graphs will be kept.
show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for "system" macros that are not in the
#    printer.cfg file. If you want to see the macros in the webui, set this to True.
# timeout: 300
#    The maximum time in seconds to let Shake&Tune process the CSV files and generate the graphs.

[bed_mesh]
speed: 350
horizontal_move_z: 8 #horizontal_move_z: 20
mesh_min: 25, 25 #mesh_min:20,20
mesh_max: 325, 325 #mesh_max:330,330
probe_count: 9, 9
fade_start: 1 #fade_start: 0.6
fade_end: 10.0
fade_target:0
algorithm: bicubic
#zero_reference_position: 175, 175

[gcode_macro _MODULE_CUSTOM1]
gcode:
	BED_MESH_CLEAR
    RESPOND MSG="BED_MESH_CLEAR"
    SET_GCODE_OFFSET Z=0
      RESPOND MSG="SET_GCODE_OFFSET Z=0"

    G28     ; home axes
      RESPOND MSG="G28"
    G0 Z2   ; position beacon at 2mm for heat soak
      RESPOND MSG="G0 Z2"
    #M140 S{BED_TEMP}     ; start bed heater
    #   RESPOND MSG="G28"
    M109 S150       ; preheat nozzle to probing temp
          RESPOND MSG="M109 S150"
    #M190 S{BED_TEMP}     ; wait on bed temperature
    #    RESPOND MSG="M190"
    G4 P60000       ; optional, let temps settle for 1 min
          RESPOND MSG="G4 P60000 "
    WIPE_NOZZLE     ; call another macro to wipe nozzle if available
        RESPOND MSG="WIPE NOZZLE"

    G28 Z METHOD=CONTACT CALIBRATE=1    ; calibrate z offset and beacon model hot
        RESPOND MSG="G28 Z METHOD=CONTACT CALIBRATE=1 "
    Z_TILT_ADJUST                       ; or QGL to balance towers
        RESPOND MSG="Z_TILT_ADJUST"

    WIPE_NOZZLE
        RESPOND MSG="WIPE NOZZLE"
    G28 Z METHOD=CONTACT CALIBRATE=0    ; calibrate z offset only after tilt/mesh
        RESPOND MSG="G28 Z METHOD=CONTACT CALIBRATE=0 "

    #M104 S{EXTRUDER_TEMP}                    ; set extruder to print temp
            RESPOND MSG=" M104 S{EXTRUDER_TEMP} "
    
    #M109 S{EXTRUDER_TEMP}                    ; wait for extruder temp
    #   RESPOND MSG=" M109 S{EXTRUDER_TEMP} "
    SET_GCODE_OFFSET Z=0.06     ; add a little offset for hotend thermal expansion
        RESPOND MSG="SET_GCODE_OFFSET Z=0.06 "
                            ; needs fine tuning, long meltzones require more

