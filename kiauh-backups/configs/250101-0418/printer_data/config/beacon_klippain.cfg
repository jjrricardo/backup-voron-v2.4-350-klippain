[beacon]
serial: /dev/serial/by-id/usb-Beacon_Beacon_RevD_EB66710A4E4B333448202020FF0A160B-if00
#   Path to the serial port for the beacon device. Typically has the form
#   /dev/serial/by-id/usb-Beacon_Beacon_...
speed: 15.
#   Z probing dive speed.
lift_speed: 25.
#   Z probing lift speed.
#backlash_comp: 0.5
#   Backlash compensation distance for removing Z backlash before measuring
#   the sensor response.
x_offset: 0
#   X offset of beacon from the nozzle.
y_offset: 20
mesh_main_direction: x
#   Primary travel direction during mesh measurement.
#mesh_overscan: -1
#   Distance to use for direction changes at mesh line ends. Omit this setting
#   and a default will be calculated from line spacing and available travel.
#mesh_cluster_size: 1
#   Radius of mesh grid point clusters.
mesh_runs: 2
#   Number of passes to make during mesh scan.
#zero_reference_cluster_size: 1.
#   Radius of cluster used for zero reference position, this is the equivalent
#   of mesh_cluster_size for the zero reference position.
#accel_scale: 16g
#   Adjust the sensitivity of the accelerometer during shaper measurement,
#   valid settings on RevH are 16g, 8g, 4g and 2g.
#accel_axes_map: x, y, z
#   Reassign or invert axes of the accelerometer to align with machine coordinates.
#default_probe_method: proximity|contact
# Sets the default probing method for mesh, tilt, qgl, probe, etc.
contact_max_hotend_temperature: 160 # increase to enable hot contacting
# Temperature limit for the hotend when contacting, override this for temps which may damage some surfaces.
#contact_sensitivity: 0
# Adjusts noise tolerance of contact processing. Values 0-3 are valid, with 3 tolerating the most noise.
#contact_latency_min: 0
# Limits how low of a latency contact is allowed to advance.


# new additions for beacon safe_z_home functionality
home_xy_position: 175, 175
# X, Y coordinate for homing z via contact.
home_z_hop: 5
# Distance to retract before x/y homing moves.
home_z_hop_speed: 30
# Retraction speed for z hop.
home_xy_move_speed: 300
# Speed for moving to home_xy_position.
#home_y_before_x: False
# If set, the Y axis will home first when using the beacon safe_z_home

# new additions for setting default homing mode
home_method: contact
home_method_when_homed: proximity # after initial calibration use induction
home_autocalibrate: unhomed # contact will calibrate beacon on first home
home_gcode_pre_x: _HOME_PRE_AXIS AXIS=x
home_gcode_post_x: _HOME_POST_AXIS AXIS=X
home_gcode_pre_y: _HOME_PRE_AXIS AXIS=Y
home_gcode_post_y: _HOME_POST_AXIS AXIS=Y


# new autocalibration config options
#autocal_speed: 3
# Speed during contact movement. Probing outside of 2-5mm/s not recommended and at your own risk.
#autocal_accel: 100
# Acceleration of autocal movement.
#autocal_retract_dist: 2
# Retract distance between autocal samples.
#autocal_retract_speed: 10
# Speed of autocal retraction move.
#autocal_sample_count: 3
# Number of samples used for each autocal.
#autocal_tolerance: 0.008
# Acceptance tolerance for an autocal result.
#autocal_max_retries: 3
# Number of retry attempts permitted when tolerance is exceeded.



[gcode_macro _HOME_PRE_AXIS]
gcode:
  # Adapt this for your printer.
  {% set HOME_CURRENT = 0.5 %}
  SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
  SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

[gcode_macro _HOME_POST_AXIS]
gcode:
  {% set axis = params.AXIS %}
  {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
  {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}

  # Move away
  SAVE_GCODE_STATE NAME=home_post_axis
  G91
  G0 {axis}-10 F3600
  RESTORE_GCODE_STATE NAME=home_post_axis

  # Make sure StallGuard registers are cleared
  M400
  # Set current during print
  SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
  SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}